heat_template_version: 2014-10-16

description: >
  A template which starts openstack on AtomicOS.

#http://paste.fedoraproject.org/200162/14267900/

parameters:
  key_name:
    type: string
    default: default
  flavor:
    type: string
    default: m1.small
  image:
    type: string
    default: rhel-atomic

## Rabbit ##

  RabbitPassword:
    default: guest
    description: The password for RabbitMQ
    type: string
    hidden: true

  RabbitUserName:
    default: guest
    description: The username for RabbitMQ
    type: string

## Mysql ##

  MysqlRootPassword:
    type: string
    description: The password for the DB
    hidden: true
    default: kolla

## KEYSTONE ##
  KeystoneUserName:
    default: admin
    description: The admin username for Keystone
    type: string

  KeystoneAdminPassword:
    default: 12345
    description: The admin username for Keystone
    type: string

  KeystoneAdminServicePort:
    default: 5000
    description: The admin username for Keystone
    type: string

  KeystoneAdminServiceHost:
    default: { get_attr: [server, first_address] }
    description: The admin username for Keystone
    type: string

  KeystoneAdminToken:
    default: 13245
    description: The admin username for Keystone
    type: string

  KeystoneAuthProtocol:
    default: http
    description: The admin username for Keystone
    type: string

  KeystoneDBPassword:
    default: kolla
    description: The admin username for Keystone
    type: string

  NovaKeystonePassword:
    default: nova
    description: The admin username for Keystone
    type: string

  NovaKeystoneUser:
    default: nova
    description: The admin username for Keystone
    type: string

  GlanceKeystoneUser:
    default: glance
    description: The admin username for Keystone
    type: string

  GlanceKeystonePassword:
    default: glance
    description: The admin password for Keystone
    type: string

  AdminTenantName:
    default: admin
    description: The admin username for Keystone
    type: string

  DBRootPassword:
    default: kolla
    description: The admin username for Keystone
    type: string

## Glance ##

  GlanceKeystoneUser:
    default: glance
    description: The admin username for Keystone
    type: string

  GlanceKeystonePassword:
    default: glance
    description: The admin username for Keystone
    type: string

  GlanceDBUser:
    default: glance
    description: The admin username for Keystone
    type: string

  GlanceDBPassword:
    default: kolla
    description: The admin username for Keystone
    type: string

  GlanceDBName:
    default: glance
    description: The admin username for Keystone
    type: string

## Nova ##

  NovaKeystoneUser:
    default: nova
    description: The admin username for Keystone
    type: string

  NovaKeystonePassword:
    default: nova
    description: The admin username for Keystone
    type: string

  NovaDBUser:
    default: nova
    description: The admin username for Keystone
    type: string

  NovaDBPassword:
    default: kolla
    description: The admin username for Keystone
    type: string

  NovaDBName:
    default: nova
    description: The admin username for Keystone
    type: string

  NetworkManager:
    default: nova
    description: The admin username for Keystone
    type: string

   ## Relationships
  KeystoneAdminServiceHost:
    default: { get_attr: [server, first_address] }
    description: The admin username for Keystone
    type: string

  NovaFlatInterface:
    default: eth0
    description: I suck at descriptions
    type: string

  GlanceApiServiceHost:
    default: { get_attr: [server, first_address] }
    description: I suck at descriptions
    type: string

  GlanceRegistryServiceHost:
    default: { get_attr: [server, first_address] }
    description: I suck at descriptions
    type: string

  KeystoneAdminServiceHost:
    default: { get_attr: [server, first_address] }
    description: I suck at descriptions
    type: string

  KeystonePublicServiceHost:
    default: { get_attr: [server, first_address] }
    description: I suck at descriptions
    type: string

  MariadbServiceHost:
    default: { get_attr: [server, first_address] }
    description: I suck at descriptions
    type: string

  NovaApiServiceHost:
    default: { get_attr: [server, first_address] }
    description: I suck at descriptions
    type: string

  NovaComputeServiceHost:
    default: { get_attr: [server, first_address] }
    description: I suck at descriptions
    type: string

  NovaConductorServiceHost:
    default: { get_attr: [server, first_address] }
    description: I suck at descriptions
    type: string

  NovaEc2ApiServiceHost:
    default: { get_attr: [server, first_address] }
    description: I suck at descriptions
    type: string

  NovaEc2ComputeServiceHost:
    default: { get_attr: [server, first_address] }
    description: I suck at descriptions
    type: string

  NovaEc2NetworkServiceHost:
    default: { get_attr: [server, first_address] }
    description: I suck at descriptions
    type: string

  NovaEc2ServiceHost:
    default: { get_attr: [server, first_address] }
    description: I suck at descriptions
    type: string

  NovaNetworkServiceHost:
    default: { get_attr: [server, first_address] }
    description: I suck at descriptions
    type: string

  NovaPublicInterface:
    default: eth0
    description: I suck at descriptions
    type: string

  NovaPublicIp:
    default: { get_attr: [server, first_address] }
    description: I suck at descriptions
    type: string

  RabbitMQServiceHost:
    default: { get_attr: [server, first_address] }
    description: I suck at descriptions
    type: string

outputs:
  instance_ip:
    description: The IP address of the deployed instance
    value: { get_attr: [server, first_address] }

resources:

  boot_config:
    type: Heat::InstallConfigAgent

  server:
    type: OS::Nova::Server
    properties:
      image: {get_param: image}
      flavor: {get_param: flavor}
      key_name: {get_param: key_name}
      user_data_format: SOFTWARE_CONFIG
      user_data: {get_attr: [boot_config, config]}

  openstack_environment_deployment:
    type: OS::Heat::SoftwareDeployment
    depends_on: server
    properties:
      config:
        get_resource: openstack_environment_setup
      server:
        get_resource: server
      input_values:
        ADMIN_TENANT_NAME: {get_param: AdminTenantName}
        DB_ROOT_PASSWORD: {get_param: DBRootPassword}
        FLAT_INTERFACE: {get_param: NovaFlatInterface}
        GLANCE_API_SERVICE_HOST: {get_param: GlanceApiServiceHost}
        GLANCE_DB_NAME: {get_param: GlanceDBName}
        GLANCE_DB_PASSWORD: {get_param: GlanceDBPassword}
        GLANCE_DB_USER: {get_param: GlanceDBUser}
        GLANCE_KEYSTONE_PASSWORD: {get_param: GlanceKeystonePassword}
        GLANCE_KEYSTONE_USER: {get_param: GlanceKeystoneUser}
        GLANCE_REGISTRY_SERVICE_HOST: {get_param: GlanceRegistryServiceHost}
        KEYSTONE_ADMIN_PASSWORD: {get_param: KeystoneAdminPassword}
        KEYSTONE_ADMIN_SERVICE_HOST: {get_param: KeystoneAdminServiceHost}
        KEYSTONE_ADMIN_SERVICE_PORT: {get_param: KeystoneAdminServicePort}
        KEYSTONE_ADMIN_TOKEN: {get_param: KeystoneAdminToken}
        KEYSTONE_AUTH_PROTOCOL: {get_param: KeystoneAuthProtocol}
        KEYSTONE_DB_PASSWORD: {get_param: KeystoneDBPassword}
        KEYSTONE_PUBLIC_SERVICE_HOST: {get_param: KeystonePublicServiceHost}
        MARIADB_SERVICE_HOST: {get_param: MariadbServiceHost}
        MYSQL_ROOT_PASSWORD: {get_param: MysqlRootPassword}
        NETWORK_MANAGER: {get_param: NetworkManager}
        NOVA_API_SERVICE_HOST: {get_param: NovaApiServiceHost}
        NOVA_COMPUTE_SERVICE_HOST: {get_param: NovaComputeServiceHost}
        NOVA_CONDUCTOR_SERVICE_HOST: {get_param: NovaConductorServiceHost}
        NOVA_DB_NAME: {get_param: NovaDBName}
        NOVA_DB_PASSWORD: {get_param: NovaDBPassword}
        NOVA_DB_USER: {get_param: NovaDBUser}
        NOVA_EC2_API_SERVICE_HOST: {get_param: NovaEc2ApiServiceHost}
        NOVA_EC2_COMPUTE_SERVICE_HOST: {get_param: NovaEc2ComputeServiceHost}
        NOVA_EC2_NETWORK_SERVICE_HOST: {get_param: NovaEc2NetworkServiceHost}
        NOVA_EC2_SERVICE_HOST: {get_param: NovaEc2ServiceHost}
        NOVA_KEYSTONE_PASSWORD: {get_param: NovaKeystonePassword}
        NOVA_KEYSTONE_USER: {get_param: NovaKeystoneUser}
        NOVA_NETWORK_SERVICE_HOST: {get_param: NovaNetworkServiceHost}
        PUBLIC_INTERFACE: {get_param: NovaPublicInterface}
        PUBLIC_IP: {get_param: NovaPublicIp}
        RABBITMQ_PASS: {get_param: RabbitPassword}
        RABBITMQ_SERVICE_HOST: {get_param: RabbitMQServiceHost}
        RABBITMQ_USER: {get_param: RabbitUserName}

  openstack_environment_setup:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      inputs:
        - name: ADMIN_TENANT_NAME
        - name: DB_ROOT_PASSWORD
        - name: FLAT_INTERFACE
        - name: GLANCE_API_SERVICE_HOST
        - name: GLANCE_DB_NAME
        - name: GLANCE_DB_PASSWORD
        - name: GLANCE_DB_USER
        - name: GLANCE_KEYSTONE_PASSWORD
        - name: GLANCE_KEYSTONE_USER
        - name: GLANCE_REGISTRY_SERVICE_HOST
        - name: HOST_IP
        - name: KEYSTONE_ADMIN_PASSWORD
        - name: KEYSTONE_ADMIN_SERVICE_HOST
        - name: KEYSTONE_ADMIN_SERVICE_PORT
        - name: KEYSTONE_ADMIN_TOKEN
        - name: KEYSTONE_AUTH_PROTOCOL
        - name: KEYSTONE_DB_PASSWORD
        - name: KEYSTONE_PUBLIC_SERVICE_HOST
        - name: MARIADB_SERVICE_HOST
        - name: MYSQL_ROOT_PASSWORD
        - name: NETWORK_MANAGER
        - name: NOVA_API_SERVICE_HOST
        - name: NOVA_COMPUTE_SERVICE_HOST
        - name: NOVA_CONDUCTOR_SERVICE_HOST
        - name: NOVA_DB_NAME
        - name: NOVA_DB_PASSWORD
        - name: NOVA_DB_USER
        - name: NOVA_EC2_API_SERVICE_HOST
        - name: NOVA_EC2_COMPUTE_SERVICE_HOST
        - name: NOVA_EC2_NETWORK_SERVICE_HOST
        - name: NOVA_EC2_SERVICE_HOST
        - name: NOVA_KEYSTONE_PASSWORD
        - name: NOVA_KEYSTONE_USER
        - name: NOVA_NETWORK_SERVICE_HOST
        - name: PUBLIC_INTERFACE
        - name: PUBLIC_IP
        - name: RABBITMQ_PASS
        - name: RABBITMQ_SERVICE_HOST
        - name: RABBITMQ_USER
      config: |
        #!/bin/bash
        env > /etc/openstack.env

  rabbitmq_deployment:
    type: OS::Heat::SoftwareDeployment
    depends_on: openstack_environment_deployment
    properties:
      config:
        get_resource: atomic_install_rabbitmq
      server:
        get_resource: server

  atomic_install_rabbitmq:
    type: OS::Heat::StructuredConfig
    properties:
      group: atomic
      config:
        command: install
        image: atomic-install-rabbitmq

  mariadb_deployment:
    type: OS::Heat::SoftwareDeployment
    depends_on: openstack_environment_deployment
    properties:
      config:
        get_resource: atomic_install_mariadb
      server:
        get_resource: server

  atomic_install_mariadb:
    type: OS::Heat::StructuredConfig
    properties:
      group: atomic
      config:
        command: install
        image: atomic-install-mariadb

  keystone_deployment:
    type: OS::Heat::SoftwareDeployment
    depends_on: openstack_environment_deployment
    properties:
      config:
        get_resource: atomic_install_keystone
      server:
        get_resource: server

  atomic_install_keystone:
    type: OS::Heat::StructuredConfig
    properties:
      group: atomic
      config:
        command: install
        image: atomic-install-keystone

  glance_api_deployment:
    type: OS::Heat::SoftwareDeployment
    depends_on: openstack_environment_deployment
    properties:
      config:
        get_resource: atomic_install_glance_api
      server:
        get_resource: server

  atomic_install_glance_api:
    type: OS::Heat::StructuredConfig
    properties:
      group: atomic
      config:
        command: install
        image: atomic-install-glance-api

  glance_registry_deployment:
    type: OS::Heat::SoftwareDeployment
    depends_on: openstack_environment_deployment
    properties:
      config:
        get_resource: atomic_install_glance_registry
      server:
        get_resource: server
      input_values:

  atomic_install_glance_registry:
    type: OS::Heat::StructuredConfig
    properties:
      group: atomic
      config:
        command: install
        image: atomic-install-glance-registry

  nova_conductor_deployment:
    type: OS::Heat::SoftwareDeployment
    depends_on: openstack_environment_deployment
    properties:
      config:
        get_resource: atomic_install_nova_conductor
      server:
        get_resource: server
      input_values:

  atomic_install_nova_conductor:
    type: OS::Heat::StructuredConfig
    properties:
      group: atomic
      config:
        command: install
        image: atomic-install-nova-conductor

  nova_api_deployment:
    type: OS::Heat::SoftwareDeployment
    depends_on: openstack_environment_deployment
    properties:
      config:
        get_resource: atomic_install_glance_api
      server:
        get_resource: server
      input_values:

  atomic_install_glance_api:
    type: OS::Heat::StructuredConfig
    properties:
      group: atomic
      config:
        command: install
        image: atomic-install-nova-api

  nova_compute_deployment:
    type: OS::Heat::SoftwareDeployment
    depends_on: openstack_environment_deployment
    properties:
      config:
        get_resource: atomic_install_nova_compute
      server:
        get_resource: server

  atomic_install_nova_compute:
    type: OS::Heat::StructuredConfig
    properties:
      group: atomic
      config:
        command: install
        image: atomic-install-nova-compute

  nova_scheduler_deployment:
    type: OS::Heat::SoftwareDeployment
    depends_on: openstack_environment_deployment
    properties:
      config:
        get_resource: atomic_install_nova_scheduler
      server:
        get_resource: server

  atomic_install_nova_scheduler:
    type: OS::Heat::StructuredConfig
    properties:
      group: atomic
      config:
        command: install
        image: atomic-install-nova-scheduler

  nova_network_deployment:
    type: OS::Heat::SoftwareDeployment
    depends_on: nova_conductor_deployment
    properties:
      config:
        get_resource: atomic_install_nova_network
      server:
        get_resource: server

  atomic_install_nova_network:
    type: OS::Heat::StructuredConfig
    properties:
      group: atomic
      config:
        command: install
        image: atomic-install-nova-network
